type Store @model @auth (
    rules: [
      { allow: owner, ownerField: "createdBy" },
      { allow: private, operations: [read] },
      { allow: public, operations: [read], provider: iam }
    ]
  ) 
  @key(
    name: "byCreatedDate", 
    fields: ["createdBy", "createdAt"],
    queryField: "storesByCreatedDate"
  ) {
  id: ID!
  createdBy: String
  createdAt: String
  name: String!
  description: String
  phoneNumber: String!
  email: String!
  locations: [Location] @connection(keyName: "byStore", fields: ["id"])
  items: [Item] @connection(keyName: "byStore", fields: ["id"])
}

type Location @model @auth (
    rules: [
      { allow: owner, ownerField: "createdBy" },
      { allow: private, operations: [read] },
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(
    name: "byStore", 
    fields: ["storeId", "createdAt"], 
    queryField: "locationsByCreatedDate"
  ) {
  id: ID!
  createdBy: String
  createdAt: String
  storeId: ID!
  store: Store @connection(fields: ["storeId"])
  address: String!
  description: String
  phoneNumber: String!
  email: String!
  menuCategories: [String]
}

type Item @model @auth (
    rules: [
      { allow: owner, ownerField: "createdBy" },
      { allow: private, operations: [read] },
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(name: "byStore", fields: ["storeId", "name"]) {
  id: ID!
  createdBy: String
  storeId: ID!
  store: Store @connection(fields: ["storeId"])
  name: String!
  price: Float!
  description: String
}